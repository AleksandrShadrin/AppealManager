@using AppealManager.Application.Exceptions;
@using AppealManager.Application.Services;
@using AppealManager.Core.Entities;
@using System.Diagnostics;

@inject IAppealManagerService appealManagerService

<TextFileSelector Title="Выбор файла с обращениеями." TextChanged="OnTextChanged" />
@if (isParsed)
{
    <h5>Ифнормация из файла считана за: @timeForParse мс</h5>
}
@if(error != string.Empty)
{
    <h5>@error</h5>
}

@code {
    [Parameter] 
    public List<Appeal> Appeals { get; set; } = new();

    [Parameter]
    public EventCallback<List<Appeal>> AppealsChanged { get; set; }

    long timeForParse = 0;
    bool isParsed = false;
    string error = string.Empty;

    void OnTextChanged(string text)
    {   
        var stopWatch = Stopwatch.StartNew();
        try
        {
            error = string.Empty;

            var newAppeals = appealManagerService
                .GetAppeals(text)
                .ToList();

            AppealsChanged.InvokeAsync(newAppeals);

            stopWatch.Stop();
            isParsed = true;
            timeForParse = stopWatch.ElapsedMilliseconds;
        }
        catch (ApplicationBaseException ex)
        {
            error = ex.Message;
        }
        finally
        {
            stopWatch.Stop();
        }
    }
}
